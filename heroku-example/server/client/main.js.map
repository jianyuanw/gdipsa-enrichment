{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/fortune.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ICTnE,qEAA8B;IAC5B,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,iFACF;;ACCO,MAAM,YAAY;IAGvB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAqB,EAAE,EAAE;YACrE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;;wEAZU,YAAY;4FAAZ,YAAY;QDTzB,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAExB,4EAA8C;QAAxB,oIAAS,iBAAa,IAAC;QAAC,uEAAY;QAAA,4DAAS;QAEnE,gEAAM;QAEN,sGAEK;;QAFa,0DAAU;QAAV,gFAAU;;;;;;;;;;;;;;AEL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AAET;AACI;;AAQ5C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,+DAAc,CAAC,YADlB,CAAC,uEAAa,EAAE,qEAAgB,CAAC;mIAI/B,SAAS,mBALL,2DAAY,aACjB,uEAAa,EAAE,qEAAgB;;;;;;;;;;;;;ACT3C;AAAA;AAAA;AAAA;AAA8D;;;AAI9D,8CAA8C;AAC9C,MAAM,UAAU,GAAG,mDAAmD,CAAC;AACvE,yBAAyB;AAGlB,MAAM,cAAc;IACzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,gBAAgB,CAAC,CAAC,GAAG,CAAC;QACpB,MAAM,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAgB,GAAG,UAAU,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC;aAC3D,SAAS,EAAE,CAAC;IACjB,CAAC;;4EARU,cAAc;iGAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;;;;;;;ACToB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h2>Fortune Cookies</h2>\n\n<button type=\"button\" (click)=\"getFortunes()\">More Cookies</button>\n\n<hr />\n\n<h3 *ngFor=\"let c of cookies\">\n  {{ c }}\n</h3>\n","import { Component, OnInit } from '@angular/core';\nimport { FortuneService } from './fortune.service';\nimport { FortuneCookie } from './models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  cookies: string[];\n\n  constructor(private fortuneService: FortuneService) {}\n\n  getFortunes() {\n    console.info('Getting fortune cookies from the server');\n    this.fortuneService.getFortuneCookie(3).then((result: FortuneCookie) => {\n      console.info(result);\n      this.cookies = result.cookies;\n      console.info('Here are your cookies:', this.cookies);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FortuneService } from './fortune.service';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [FortuneService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FortuneCookie } from './models';\r\n\r\n// const SERVER_URL = 'http://localhost:3000';\r\nconst SERVER_URL = 'https://angular-http-fortune-cookie.herokuapp.com';\r\n// const SERVER_URL = '';\r\n\r\n@Injectable()\r\nexport class FortuneService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getFortuneCookie(n = 1): Promise<FortuneCookie> {\r\n    const params = new HttpParams().set('n', `${n}`);\r\n    return this.http\r\n      .get<FortuneCookie>(`${SERVER_URL}/api/fortune`, { params })\r\n      .toPromise();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}