{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n// const SERVER_URL = 'http://localhost:3000';\nconst SERVER_URL = '';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  imgSrcs: string[];\n  form: FormGroup;\n  searchTerm: string;\n\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      search: ['', Validators.required],\n    });\n  }\n\n  generateGifs() {\n    const searchTerm = this.form.get('search').value.trim();\n    if (!searchTerm) {\n      return;\n    }\n    const params = new HttpParams().set('q', searchTerm);\n    this.http\n      .get<string[]>(`${SERVER_URL}/api/giphy`, {\n        params,\n      })\n      .toPromise()\n      .then((result) => {\n        this.imgSrcs = result;\n      });\n    this.searchTerm = searchTerm;\n  }\n}\n","<div class=\"container-fluid px-4\">\n  <div class=\"row my-4\">\n    <div class=\"col d-flex align-items-center\">\n      <img src=\"assets/giphy-logo.png\" style=\"width: 80px\" />\n      <h3 class=\"d-inline ml-3\">Generate some GIFs using Giphy's API</h3>\n    </div>\n  </div>\n\n  <form [formGroup]=\"form\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Enter a search term\"\n            formControlName=\"search\"\n          />\n          <div class=\"input-group-append\">\n            <button\n              class=\"btn btn-primary\"\n              type=\"button\"\n              [disabled]=\"form.invalid\"\n              (click)=\"generateGifs()\"\n            >\n              <i class=\"fas fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n\n  <div class=\"row my-4\" *ngIf=\"imgSrcs\">\n    <div class=\"col\">\n      <h4>Results for \"{{ searchTerm }}\":</h4>\n    </div>\n  </div>\n\n  <div class=\"row d-flex flex-wrap mx-0\" *ngIf=\"imgSrcs\">\n    <img *ngFor=\"let imgSrc of imgSrcs\" src=\"{{ imgSrc }}\" class=\"m-1\" />\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, ReactiveFormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}